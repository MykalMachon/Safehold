pipeline {
   agent any
   
   environment { 
     SONAR_CREDS = credentials('sonarqube_credentials')
     SONAR_BACKEND_PROJECT_TOKEN_MASTER = "master_comp370_backend"
   }

   stages {
        stage('Checkout Code') {
             steps { 
                deleteDir()
                sh "rm -rf ./*"
                git branch: "FEATURE-Android_Pipeline", changelog: false, credentialsId: 'deployment-key', url: 'git@cisgitlab.ufv.ca:arshsekhon/comp_370_project.git'
                stash name: 'android_stash' }
        }  
       
         
         stage('Android Build'){
            agent{
               dockerfile {
                    dir 'android'
                    args '-u root:root --tmpfs /.config'  
                    reuseNode true
                } 
            }
            steps{  
                deleteDir()
                unstash 'android_stash'
                sh '''
                    cd android; 
                    gradle wrapper; 
                     ./gradlew clean assembleDebug
                        chmod -R 0777 ../*; '''
                archive '.android/app/build/outputs/**/app-debug.apk'
                //stash name: 'android_stash'
            }
        }
        
        
        
        
         stage('Android: Running Tests and Lint'){
            agent{
               dockerfile {
                    dir 'android'
                    args '-u root:root --tmpfs /.config' 
                    reuseNode true
                } 
            }
            steps{ 
                 sh '''cd ./android;
                       gradle wrapper; 
                       ./gradlew lint;
                        chmod -R 0777 ../*;
                        ls -al ./app/build/reports/lint-results.xml
'''             
                sh 'ls -al ./android/app/build/reports/lint-results.xml'
                stash includes: '**/android/app/build/reports/lint-results*', name: 'lint-reports'
              
        
            script{
                     try {
                          sh '''cd ./android;
                                gradle wrapper; 
                                ./gradlew test;
                                ./gradlew codeCoverageReport;
                                chmod -R 0777 ../*;
                                ls -al ./app/build'''
                     } catch (err) {
                          currentBuild.result = 'UNSTABLE'
                     }
                 } 
                 
                     stash includes: '**/test-results/**/*.xml', name: 'junit-reports'
                     stash includes: '**/jacoco/**', name: 'jacoco-coverage-reports'
                     
                     sh ''' cd ./android;
                            ./gradlew :app:assembleDebug
                            ./gradlew :app:assembleDebugAndroidTest;
                            chmod -R 0777 ../*;'''
                    archive 'app/build/outputs/**/*androidTest*.apk'
                    
                    
                    jacoco( 
                          execPattern: '**/android/app/*.exec',
                          classPattern: '**/android/app/**/classes',
                          sourcePattern: './android/app/src/main/java',
                          exclusionPattern: './android/app/src/test*'
                    )
                    
                }
                
            } 
        
            stage('Publishing Results'){
                agent any
                steps{
                    unstash 'junit-reports'
                    sh 'ls -al .'
                    sh 'ls -al ./android/app/build'
                    junit testResults:'**/test-results/**/*.xml'   

                    unstash 'lint-reports'
                    step([$class: 'LintPublisher', canComputeNew: false, canRunOnFailed: true, defaultEncoding: '', healthy: '', pattern: '**/app/build/reports/lint-results*.xml', unHealthy: ''])
                     
                }
                
            }
            
             
        
        
   }
   
}
//./gradlew clean test codeCoverageReport sonarqube -Dsonar.host.url=http://localhost:9000 -Dsonar.projectKey=android-app -Dsonar.projectName=android-app